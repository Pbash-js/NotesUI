{"version":3,"sources":["Note.js","Dock.js","NoteGrid.js","App.js","index.js"],"names":["Note","useState","title","text","setText","handleChange","e","prevState","target","name","value","className","type","onChange","placeholder","Dock","document","addEventListener","shiftNotes","colorPallete","toggleColorPallete","gridNoteArray","querySelectorAll","forEach","note","index","style","top","getBoundingClientRect","y","left","x","addNote","color","newNote","createElement","ReactDOM","render","classList","add","querySelector","prepend","gridNote","transform","opacity","onClick","colorArray","colorContainer","marginTop","item","setTimeout","i","length","animateColorSelector","NoteGrid","id","App","search","getElementById"],"mappings":"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","file":"static/js/main.46e8894a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Note = () => {\r\n  const [text, setText] = useState({\r\n    title: \"Untitled Note\",\r\n    text: \"Note here\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setText((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"noteTitle\"\r\n        type=\"text\"\r\n        name=\"title\"\r\n        onChange={(e) => handleChange(e)}\r\n        value={text.title}\r\n        placeholder=\"You left me Empty!\"\r\n      ></input>\r\n      <textarea\r\n        className=\"noteText\"\r\n        name=\"text\"\r\n        onChange={(e) => handleChange(e)}\r\n        value={text.text}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Note from \"./Note\";\r\n\r\nconst Dock = () => {\r\n  document.addEventListener(\"resize\", () => {\r\n    shiftNotes();\r\n  });\r\n\r\n  const [colorPallete, toggleColorPallete] = useState(false);\r\n\r\n  const shiftNotes = () => {\r\n    var gridNoteArray = document.querySelectorAll(\".gridNote\");\r\n\r\n    document.querySelectorAll(\".note\").forEach((note, index) => {\r\n      if (index !== 0) {\r\n        note.style.top = `${gridNoteArray[index].getBoundingClientRect().y}px`;\r\n        note.style.left = `${gridNoteArray[index].getBoundingClientRect().x}px`;\r\n      }\r\n    });\r\n  };\r\n\r\n  const addNote = (e, color) => {\r\n    let newNote = document.createElement(\"div\");\r\n    ReactDOM.render(<Note />, newNote);\r\n    newNote.classList.add(\"note\", color);\r\n    newNote.style.top = `${e.target.getBoundingClientRect().top - 100}px`;\r\n    newNote.style.left = `${e.target.getBoundingClientRect().left - 150}px`;\r\n    document.querySelector(\".App\").prepend(newNote);\r\n    let gridNote = document.createElement(\"div\");\r\n    gridNote.classList.add(\"gridNote\");\r\n    document.querySelector(\".grid\").prepend(gridNote);\r\n    newNote.style.top = `${gridNote.getBoundingClientRect().y}px`;\r\n    newNote.style.left = `${gridNote.getBoundingClientRect().x}px`;\r\n    newNote.style.transform = `scale(${1})`;\r\n    newNote.style.opacity = `${1}`;\r\n    shiftNotes();\r\n  };\r\n\r\n  const animateColorSelector = () => {\r\n    var colorArray = document.querySelectorAll(\".newNoteColor\");\r\n    var colorContainer = document.querySelector(\".colorContainer\");\r\n    if (!colorPallete) {\r\n      colorContainer.style.opacity = null;\r\n\r\n      colorContainer.style.marginTop = \"3rem\";\r\n      colorArray.forEach((item, index) => {\r\n        setTimeout(() => {\r\n          for (let i = index; i < colorArray.length; i++) {\r\n            colorArray[i].style.marginTop = `${3 * index}rem`;\r\n          }\r\n        }, 500 * index);\r\n      });\r\n      toggleColorPallete(!colorPallete);\r\n    } else {\r\n      colorContainer.style.marginTop = null;\r\n      colorContainer.style.opacity = 0;\r\n\r\n      colorArray.forEach((item, index) => {\r\n        setTimeout(() => {\r\n          for (let i = index; i < colorArray.length; i++) {\r\n            colorArray[i].style.marginTop = null;\r\n          }\r\n        }, 500 * index);\r\n      });\r\n      toggleColorPallete(!colorPallete);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dock\">\r\n      <div className=\"newButton\" onClick={() => animateColorSelector()}>\r\n        <i className=\"fas fa-plus\"></i>\r\n      </div>\r\n      <div className=\"colorContainer\">\r\n        <div\r\n          className=\"newNoteColor redNote\"\r\n          onClick={(e) => addNote(e, \"redNote\")}\r\n        ></div>\r\n        <div\r\n          className=\"newNoteColor blueNote\"\r\n          onClick={(e) => addNote(e, \"blueNote\")}\r\n        ></div>\r\n        <div\r\n          className=\"newNoteColor greenNote\"\r\n          onClick={(e) => addNote(e, \"greenNote\")}\r\n        ></div>\r\n        <div\r\n          className=\"newNoteColor violetNote\"\r\n          onClick={(e) => addNote(e, \"violetNote\")}\r\n        ></div>\r\n        <div\r\n          className=\"newNoteColor orangeNote\"\r\n          onClick={(e) => addNote(e, \"orangeNote\")}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dock;\r\n","import React from \"react\";\r\n\r\nconst NoteGrid = () => {\r\n  return <div id=\"grid\" className=\"grid\"></div>;\r\n};\r\n\r\nexport default NoteGrid;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Dock from \"./Dock\";\nimport NoteGrid from \"./NoteGrid\";\n\nconst App = () => {\n  const [text, setText] = useState({\n    search: \"\",\n  });\n\n  const handleChange = (e) => {\n    setText((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <input\n          className=\"search\"\n          name=\"search\"\n          value={text.search}\n          placeholder=\"Search\"\n          onChange={(e) => handleChange(e)}\n        ></input>\n      </nav>\n      <Dock />\n      <div className=\"title\">Notes</div>\n      <NoteGrid />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}